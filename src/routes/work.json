[
	{
		"name": "Equinix Metal",
		"title": "Senior Security Engineer",
		"start": "2023",
		"end": "2024",
		"iconPath": "work/eqix.svg",
		"href": "https://deploy.equinix.com/",
		"summary": "Secured infrastructure for 220 applications across 80 global Kubernetes clusters (800+ nodes) and 5,000+ deployments. Focused on scaling security, driving operational efficiency, and enabling teams to maintain secure practices in a fast-paced, cloud-native environment.",
		"overview": {
			"summary": "As a security-focused engineer at Equinix Metal, I was responsible for securing the infrastructure supporting 220 applications across a global fleet of 80 Kubernetes clusters (800+ nodes), with over 5000 deployments.",
			"contributions": {
				"✅ Software Development": [
					{
						"▼ Open Source SSH monitoring Software (Go)": [
							"▼ Used two goroutines to monitor OpenSSH logins and Auditd logs, sending specific actions to a correlation Go channel. A third goroutine then processed the actions, correlating authenticated user activity synchronously and forwarding the results to Splunk.",
							"▼ Re-architected the software to support any Linux distro by abstracting how it monitors systemd and audit logs, creating a mental model for ingesters and processors, while eliminating approximately 1,000 lines of complex code.",
							"▼ Further abstracted and simplified ingesters through the use of named pipes, providing a simple interface for ingesters to consume new events. Used the <strong>bufio.ReadString</strong> method, which blocks until a delimiter is matched or an error is returned, often <strong>io.EOF</strong> when the named pipe closes.",
							"▼ Deployed the software across 80 Kubernetes clusters using ArgoCD and Helm. ArgoCD was used to manage the continuous delivery and synchronization of the application across the clusters, while Helm facilitated the deployment and management of the application’s configurations in a consistent and repeatable manner.",
							"Find the source code here: (Software: <a class='text-sky-500' href='https://github.com/metal-toolbox/audito-maldito/tree/main'>Audito</a>) (Helm: <a class='text-sky-500' href='https://github.com/equinixmetal-helm/audito-maldito'>Chart</a>)"
						]
					},
					{
						"▼ HashiCorp Vault Kubernetes Auth Method Configuration (Go)": [
							"▼ In a fast-paced, constantly changing environment, I developed a custom Go CLI tool to manage secret configurations for Kubernetes applications. This tool integrated with several in-house systems to ensure proper secret management configuration for 200 Kubernetes applications, automatically updating Vault configurations whenever the environment changed, such as when a new application was deployed to a cluster.",
							"▼ This design provided a self service model for engineers, only requiring engineers to add their app secrets to Vault and add a few k8s annotations to their K8s Pod manifest e.g. <strong> vault.hashicorp.com/agent-inject-secret-database-config.txt</strong>",
							"▼ This app retrieves the current state of the infrastructure through an exposed API, fetches user and group data from an internal IAM API, and accesses the current Vault configuration from the Vault REST API. It then identifies the necessary changes and applies them to Vault via the REST API.",
							"▼ The code included a custom Vault <strong>http.Client</strong> with methods to access Vault's Auth, Identity, Mounts, and Policy endpoints, as well as services with a clean interface for interacting with internal APIs.",
							"▼ Unit tests for the business logic were written using Go's <strong>testing</strong> package.",
							"▼ Integration tests were run locally by spinning up a Vault Docker image, configuring Vault with the base configuration, running the CLI tool, and finally using the Vault client to validate that the correct configurations were applied."
						]
					},
					{
						"▼ Falco Rule Event Generator Test Sandbox (Go)": [
							"▼ Falco is a cloud-native security tool that detects abnormal behavior, security threats, and compliance violations in real time across hosts, containers, Kubernetes, and cloud environments by leveraging custom rules on Linux kernel events and other data sources.",
							"▼ Created a custom sandbox to validate that the Falco rules were written correctly before updating them in production. The sandbox consisted of a Minikube VM with Falco installed, configured with custom rules, and an event generator Go app that triggered events.",
							"▼ The event generator app followed the design outlined in the <a href='https://github.com/falcosecurity/event-generator' class='text-sky-500'> falcosecurity/event-generator</a> repository. Each custom event test was written in a separate file and registered at startup. A test loop then ran each event, validating whether it was properly generated or ignored by connecting to the Falco gRPC socket."
						]
					}
				],
				"✅ Security": [
					{
						"▼ Runtime Security": [
							"▼ Managed Sysdig and deployed it using the Sysdig Operator via Helm. Additionally, I leveraged ArgoCD to automate continuous delivery and ensure seamless synchronization of the application across multiple clusters.",
							"▼ Monitored runtime events, investigating any that appeared abnormal, such as a user accessing an etc container as root, to identify potential security threats or policy violations.",
							"▼ Fine-tuned the runtime rules within the Sysdig SaaS platform, carefully balancing custom rulesets with the pre-configured managed rulesets to optimize security and minimize false positives."
						]
					},
					{
						"▼ Secrets Management": [
							"▼ Deployed Enterprise HashiCorp Vault to Kubernetes, with one primary and one failover cluster. Each Vault deployment was configured with high availability (HA), consisting of 5 Vault servers: one active write server and 4 standby read servers, replicating data using the Raft consensus algorithm.",
							"▼ Leveraged ArgoCD to automate continuous delivery and ensure seamless synchronization across environments.",
							"▼ Configured Okta integration in Vault for user access management.",
							"▼ Set up the Kubernetes Auth Method to enable secure authentication for Kubernetes clusters.",
							"▼ Configured policies for users, groups, and applications to enforce access controls.",
							"▼ Demoed the Kubernetes Auth Method to engineering teams, provided example app configurations, promoting its adoption and ensuring a smoother integration process."
						]
					},
					{
						"▼ Threat Modeling": [
							"▼ Continuously performed threat model analysis as my understanding of the infrastructure and environment grew, which revealed additional potential threat vectors.",
							"▼ Collaborated with the SRE team to schedule periodic CIS benchmark tests for Kubernetes environments using kube-bench.",
							"▼ Identified gaps in Pod Security Standards, presented the associated risks to leadership, and proposed remediation strategies, which led to greater visibility of the potential threats. One such risk for misconfigured Pod Security Standards is host mounting to the Kubernetes nodes. An engineer that can deploy and exec into a pod could host mount to any Kubernetes node and chroot to the mount as root.",
							"▼ Identified improper usage and storage of the CA private key, which is used to sign certificates for root access to all Kubernetes nodes.", 
							"▼ Collaborated with the Red Team to schedule and coordinate periodic penetration tests on the infrastructure, ensuring regular security assessments to identify vulnerabilities and strengthen defenses."
						]
					}
				],
				"✅ SRE": [
					"▼ Assisted in troubleshooting and debugging Kubernetes issues by analyzing logs, investigating node and pod configurations, and identifying performance bottlenecks or misconfigurations to ensure the smooth operation of the Kubernetes clusters.",
					"▼ Collaborated with the Database Administrator (DBA) team to implement LUKS (Linux Unified Key Setup) disk encryption across all database nodes, ensuring data protection at rest and enhancing the overall security posture of the database infrastructure.",
					"▼ Attempted to enable SELinux on Flatcar Container Linux by resolving label mismatches and updating to the latest open-source SELinux reference policy to enhance security and compliance across the containerized environment. However, it appears that Flatcar Container Linux does not fully support SELinux with Kubernetes, despite what is suggested in the documentation.",
					"▼ Collaborated with the SRE team to enable node-to-node encryption using WireGuard, addressing the issue of Ceph replication occurring in clear text.",
					"▼ Configured the necessary Ignition files to enable and set up Auditd for system auditing."
				]
			},
			"skills": "Kubernetes · Helm (Software) · Ansible · HashiCorp Vault · Go · Python · Pandas (Software) · NumPy · SELinux · Sysdig · Falco Security · Trivy · Docker · ArgoCD"
		}
	},
	{
		"name": "Equinix",
		"title": "Senior Security Engineer",
		"start": "2020",
		"end": "2023",
		"iconPath": "work/eqix.svg",
		"href": "https://www.equinix.com/",
		"summary": "In the Infosec organization, I focused on data science initiatives and leveraged automation to strengthen security measures. I contributed to enhancing Equinix's security posture while improving operational efficiency across global infrastructure through data-driven insights and best practices.",
		"overview": {
			"summary": "In the Infosec organization, I focused on data science initiatives and leveraged automation to strengthen security measures. I contributed to enhancing Equinix's security posture while improving operational efficiency across global infrastructure through data-driven insights and best practices.",
			"contributions": {
				"✅ Infosec Data Science Initiatives": [
					"▼ Coordinated the build of a dedicated Infosec Kubernetes cluster in Equinix Metal with 6 m3.large.x86 servers.",
					"▼ Designed a data lake strategy and created a generic data ingest K8s deployment to collect security feeds and logs using rsyslog and Fluentbit.",
					"▼ Utilized Argo Workflows DAGs to manage the ML pipeline steps for processing security data."
				],
				"✅ Security Automation & Best Practices": [
					"▼ Automated the collection of global PAN firewall logs during a ransomware attack in 2020 to support the Red Team.",
					"▼ Advised IT teams on security best practices, such as key rotation and access control to minimize security risks."
				]
			},
			"skills": "Kubernetes · Helm Charts · ArgoCD · Python · Go · MLOps"
		}
	},
	{
		"name": "Georgia Pacific",
		"title": "Machine Learning Engineer (Freelancer)",
		"start": "2021",
		"end": "2021",
		"iconPath": "work/gp.svg",
		"href": "https://www.gp.com/",
		"summary": "As a freelancer, designed a thread-safe, modular C++ application to connect to facility cameras over RTSP, detect motion in restricted areas, and alert on safety violations. Leveraged ML and computer vision to enhance security and automate safety monitoring. Deployed the solution to Kubernetes clusters at manufacturing plants for scalable, real-time monitoring.",
		"overview": {
			"summary": "As a freelancer, designed a thread-safe, modular C++ application to connect to facility cameras over RTSP, detect motion in restricted areas, and alert on safety violations. Leveraged ML and computer vision to enhance security and automate safety monitoring. Deployed the solution to Kubernetes clusters at manufacturing plants for scalable, real-time monitoring.",
			"contributions": {
				"✅ Thread-Safe, Modular C++ Program": [
					"▼ Designed a thread-safe, modular C++ application to interface with facility cameras over RTSP, continuously reading frames and pushing them to a mutex-protected queue.",
					"▼ Implemented worker threads to process frames, detect motion in restricted areas, and call a gRPC Yolo5 endpoint for object detection."
				],
				"✅ Safety Violation Alerts": [
					"▼ Developed a system to detect and alert on safety violations based on detected objects in motion, ensuring real-time monitoring and rapid response."
				],
				"✅ Containerization & Deployment": [
					"▼ Containerized the C++ program and the pretrained Yolo5 model, deploying them to Kubernetes clusters using Helm for scalable, reliable execution."
				]
			},
			"skills": "C++ · Helm (Software) · Kubernetes · Yolo5"
		}
	},
	{
		"name": "Global Payments Inc",
		"title": "Security Engineer",
		"start": "2019",
		"end": "2020",
		"iconPath": "work/global.svg",
		"href": "https://www.globalpayments.com/",
		"summary": "Automated the manual review of enterprise application logs for PCI compliance by developing an extensible ML pipeline in Kubeflow and a web application for scheduling log reviews and validating model predictions. This solution significantly reduced manual effort and improved efficiency by enabling automated anomaly detection for PCI compliance.",
		"overview": {
			"summary": "Automated the manual review of enterprise application logs for PCI compliance by developing an extensible ML pipeline in Kubeflow and a web application for scheduling log reviews and validating model predictions. This solution significantly reduced manual effort and improved efficiency by enabling automated anomaly detection for PCI compliance.",
			"contributions": {
				"✅ Automated Log Review Process": [
					"▼ Developed a generic ML pipeline to automate the review of application logs for PCI compliance, replacing the manual process for log owners."
				],
				"✅ End-to-End ML Pipeline": [
					"▼ Built extract, clean, transform, train, and predict scripts using Scikit-Learn, Pandas, and Numpy."
				],
				"✅ Anomaly Detection": [
					"▼ Trained an unsupervised K-Means algorithm on log data to predict anomalous log entries, flagging any new samples that were 2 standard deviations away from their cluster centroid."
				],
				"✅ Web Application Integration": [
					"▼ Developed a web interface enabling app owners to schedule log reviews and easily validate the model's predictions."
				]
			},
			"skills": "Kubernetes · Kubeflow · Scikit-Learn · NumPy · Pandas (Software) · Web Development · Angular Material · OIDC · MongoDB"
		}
	},
	{
		"name": "Georgia Tech Research Institute",
		"title": "Security Researcher",
		"start": "2016",
		"end": "2019",
		"iconPath": "work/gtri.png",
		"href": "https://www.gtri.gatech.edu/",
		"summary": "Split time between software development and machine learning research, working on projects to enhance security and automate processes for government sponsors. Led a joint project with McAfee to classify the severity of SIEM alerts using machine learning, automating alert reporting and prioritizing alerts for SOC analysts. Focused on advancing software security and applying ML to improve security operations and threat detection.",
		"overview": {
			"summary": "Split time between software development and machine learning research, working on projects to enhance security and automate processes for government sponsors. Led a joint project with McAfee to classify the severity of SIEM alerts using machine learning, automating alert reporting and prioritizing alerts for SOC analysts. Focused on advancing software security and applying ML to improve security operations and threat detection.",
			"contributions": {
				"✅ Security & Software Development": [
					"▼ Improved a government-sponsored email and file management web app by implementing the Bell-LaPadula security model.",
					"▼ Applied industry-standard security practices to secure data at rest, in transit, and in use.",
					"▼ Refactored the existing monolithic application into modular components using Angular, Bootstrap, Tomcat, Jersey, and Jackson."
				],
				"✅ Adversarial Machine Learning Research": [
					"▼ Conducted research on adversarial machine learning attack prevention and detection techniques against various machine learning algorithms (SVM, Neural Networks, Decision Trees, Random Forests, KNN, etc.)."
				],
				"✅ Lead Machine Learning Engineer – SIEM Project": [
					"▼ Led a joint project with McAfee to classify the severity of SIEM alerts using machine learning, automating alert reporting and prioritizing alerts for SOC analysts."
				]
			},
			"skills": "Java · JavaScript · Angular Material · HTML · Bootstrap (Framework) · JUnit · Unit Testing · Python · Scikit-Learn · NumPy · Pandas (Software) · Machine Learning"
		}
	}
]